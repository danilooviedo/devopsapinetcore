import groovy.json.JsonSlurper

node {
    ws('netcore') {
        stage('SCM') {
            git branch: 'main', credentialsId: 'danilooviedo/', url: 'https://github.com/danilooviedo/devopsapinetcore.git'
        }
        stage('Build') {
            dotnet_build();
        }
        stage('Docker') {
              bat(script: 'docker login -u 1718184698 -p 17Danilo4698', returnStdout: true);
              bat(script: 'docker build -t 1718184698/doevopsnetcore .', returnStdout: true);
              bat(script: 'docker push 1718184698/doevopsnetcore', returnStdout: true);
        }
        stage('Deploy Dev') {
              bat(script: 'az login --service-principal --username 7eba92ac-20fa-46a4-bbc2-7f4f82686e35 --password CshFXNaZMipa_ql4A608WQlUpzNxQ35_V. --tenant f31c8388-5286-4c0f-9a30-6d6ca125b8c8', returnStdout: true);
              bat(script: 'az account set --subscription "Azure subscription 1"', returnStdout: true);
              bat(script: 'az container restart --name contenedorservice --resource-group dev_jankins', returnStdout: true);
        }
        stage('Deploy Prod') {
             bat(script: 'az aks get-credentials --resource-group dev_jankins --name KlusterAsure & kubectl config get-contexts --kubeconfig=%K8S_PATH_CONFIG%', returnStdout: true);
             bat(script: 'kubectl config use-context KlusterAsure --kubeconfig=%K8S_PATH_CONFIG%', returnStdout: true);
             bat(script: 'Kubectl delete --all pods --kubeconfig=%K8S_PATH_CONFIG% & kubectl apply -f k8s.yml --kubeconfig=%K8S_PATH_CONFIG%', returnStdout: true);
        }        
    }
}

def dotnet_build() {
    bat(script: 'dotnet restore', returnStdout: true);
    bat(script: 'dotnet build', returnStdout: true);
    bat(script: 'dotnet test', returnStdout: true);
}
